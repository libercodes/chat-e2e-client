[{"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/index.tsx":"1","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/reportWebVitals.ts":"2","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/store.ts":"3","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/App.tsx":"4","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/root.reducer.ts":"5","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/views/Home.tsx":"6","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/chat.reducer.ts":"7","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/types/types.ts":"8","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/services/chat.service.ts":"9","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/routes/Routes.tsx":"10","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/views/Chat.tsx":"11","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/layouts/Navbar.tsx":"12","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/config/proto/bundle.js":"13"},{"size":784,"mtime":1620880464598,"results":"14","hashOfConfig":"15"},{"size":436,"mtime":1620863882356,"results":"16","hashOfConfig":"15"},{"size":372,"mtime":1620863093631,"results":"17","hashOfConfig":"15"},{"size":1914,"mtime":1620883195166,"results":"18","hashOfConfig":"15"},{"size":237,"mtime":1620863081541,"results":"19","hashOfConfig":"15"},{"size":2727,"mtime":1620868438822,"results":"20","hashOfConfig":"15"},{"size":3530,"mtime":1620873095118,"results":"21","hashOfConfig":"15"},{"size":282,"mtime":1620878876413,"results":"22","hashOfConfig":"15"},{"size":864,"mtime":1620883057968,"results":"23","hashOfConfig":"15"},{"size":327,"mtime":1620868363837,"results":"24","hashOfConfig":"15"},{"size":6315,"mtime":1620882030485,"results":"25","hashOfConfig":"15"},{"size":2487,"mtime":1620879753822,"results":"26","hashOfConfig":"15"},{"size":15978,"mtime":1620880307995,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1gzk8ge",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/index.tsx",[],["57","58","59","60","61","62"],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/reportWebVitals.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/store.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/App.tsx",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/root.reducer.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/views/Home.tsx",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/redux/chat.reducer.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/types/types.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/services/chat.service.ts",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/routes/Routes.tsx",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/views/Chat.tsx",["63"],"import React, { useEffect, useRef, useState } from 'react';\nimport {\n  FormControlProps,\n  Button, Col, Form, Modal, Row,\n} from 'react-bootstrap';\n\nimport { ConnectedProps, connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as chatThunks from '../../redux/chat.reducer';\nimport { RootState } from '../../redux/root.reducer';\nimport { Message } from '../../types/apiResponse.types';\nimport { DisconnectEvent, EnumBESocketEvents } from '../../types/types';\nimport NavbarComponent from '../layouts/Navbar';\n\nimport {\n  Message as MessageProto,\n} from '../../config/proto/bundle';\nimport { socket } from '../../services/chat.service';\n\nconst {\n  BE_ADD_MESSAGE,\n} = EnumBESocketEvents;\n\nconst Chat = ({ messages, ...props }: Props) => {\n  const [showModal, setShowModal] = useState(true);\n  const [userInput, setUserInput] = useState('');\n  const [inputText, setInputText] = useState('');\n  const lastMessageElement = useRef<HTMLDivElement>(null);\n  const containerMessagesElement = useRef<HTMLDivElement>(null);\n  const [isScrollAtBottom, setIsScrollAtBottom] = useState(true);\n\n  useEffect(() => {\n    console.log('joining socket');\n    socket.emit('join', props.room?.code);\n  }, []);\n\n  useEffect(() => {\n    const scrollToBottom = () => {\n      if (lastMessageElement.current) {\n        if (isScrollAtBottom) {\n          lastMessageElement?.current!.scrollIntoView({\n            block: 'end',\n            behavior: 'smooth',\n          });\n        }\n      }\n    };\n    scrollToBottom();\n  }, [messages, isScrollAtBottom]);\n\n  const handleScroll = () => {\n    const {\n      scrollHeight,\n      scrollTop,\n      clientHeight,\n    } = containerMessagesElement.current!;\n\n    const isAtBottom = scrollHeight - scrollTop === clientHeight;\n    if (isAtBottom) {\n      setIsScrollAtBottom(true);\n    } else {\n      setIsScrollAtBottom(false);\n    }\n  };\n\n  const shouldModalClose = () => {\n    if (props.myuser) setShowModal(false);\n  };\n  const handleSetUser = () => {\n    if (!userInput) return;\n    props.setUser(userInput);\n    setShowModal(false);\n  };\n\n  const handleSend = (event: any) => {\n    if (event.key !== 'Enter') return;\n    if (!InputEvent) return;\n\n    const message: Message = {\n      text: inputText,\n      user: props.myuser,\n      date: new Date().toString(),\n    };\n\n    const encoded = MessageProto.encode(message).finish();\n    socket.emit(BE_ADD_MESSAGE, encoded);\n    setInputText('');\n  };\n\n  return (\n    <Row className=\"d-flex justify-content-center\">\n      <Modal show={showModal} onHide={shouldModalClose}>\n        <Modal.Header>\n          <Modal.Title>Insert username</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Control\n            placeholder=\"User123\"\n            onChange={(e) => setUserInput(e.target.value)}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => handleSetUser()}\n          >\n            Save changes\n\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Col md={12} sm={12} className=\"d-flex align-items-center justify-content-center flex-column\">\n        <Row>\n          <ChatColumn md={12} sm={12}>\n            <NavbarComponent />\n            <Row>\n              <ScrollableCol\n                md={12}\n                ref={containerMessagesElement}\n                onScroll={() => handleScroll()}\n              >\n                {\n                    messages.map((message) => (\n                      <Row\n                        ref={lastMessageElement}\n                      >\n                        <Col>\n                          <p>\n                            {`[${new Date(message.date).toLocaleTimeString()}] `}\n                            <CustomSpan color=\"#fefb62\">{`(${message.user})   `}</CustomSpan>\n                            <CustomSpan>{`${message.text}`}</CustomSpan>\n\n                          </p>\n                        </Col>\n                      </Row>\n                    ))\n                }\n              </ScrollableCol>\n\n            </Row>\n            <TextBox\n              placeholder=\"Write something...\"\n              onChange={(e: any) => setInputText(e.target.value)}\n              value={inputText}\n              onKeyDown={handleSend}\n            />\n          </ChatColumn>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nconst ScrollableCol = styled(Col)`\n    height: 80%;\n    max-height:60vh;\n    display: flex;\n    flex-direction: column;\n    padding: 0 2rem;\n    overflow-y: scroll;\n    @media (max-width: 768px) {\n        height:  calc(100vh - 3rem);\n        max-height:calc(100vh - 3rem);\n    }\n    ::-webkit-scrollbar {\n        width: 7px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background: black; \n    }\n    \n    ::-webkit-scrollbar-thumb {\n        background: #888; \n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555; \n    }\n`;\n\nconst ChatColumn = styled(Col)`\n    height: 60vh;\n    width: 50vw;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    background-color: black;\n    overflow: hidden;\n    @media (max-width: 768px) {\n        height: 100vh;\n        width: 100%;\n    }\n    \n`;\n\nconst CustomSpan = styled.span`\n    color: ${(props) => props.color || 'inherit'};\n`;\n\nconst TextBox = styled(Form.Control)<FormControlProps>`\n    height: 3rem;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    background-color: #3b3b3b;\n    border: none;\n    color: inherit;\n    border-radius: 0;\n    :focus {\n        outline: none;\n        background-color: #4d4c4c;\n        color: rgb(0, 189, 0);\n    }\n\n`;\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  setUser: (name: string) => dispatch(chatThunks.setUser(name)),\n  addMessage: (message: Message) => dispatch(chatThunks.addMessage(message)),\n  disconnectFromEvent: (value: DisconnectEvent) => dispatch(chatThunks.disconnectFromRoom(value)),\n  disconnect: (id: string) => dispatch(chatThunks.disconnectChat(id)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  myuser: state.chat.myuser,\n  messages: state.chat.messages,\n  systemName: state.chat.systemName,\n  room: state.chat.room,\n});\n\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\ninterface Props extends ConnectedProps<typeof connectToStore> {}\n\nexport default connectToStore(Chat);\n","/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/components/layouts/Navbar.tsx",[],"/mnt/c/Users/liber/Documents/trabajo/facultad/LPPA/chat-encrypted/client/src/config/proto/bundle.js",[],["64","65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":33,"column":5,"nodeType":"84","messageId":"85","endLine":33,"endColumn":16},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},"lines-around-directive",["86"],"no-spaced-func",["87"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]